endian big

enum MessageType : u16 {
    CRT_State       = h0100,
    CRT_DataFrom    = h0102,
    CRT_DataTo      = h0103,

    Output_DigIn    = h1000,
    Output_DigOut   = h1020,
    Output_Door     = h1021,
    Output_AnIn     = h1040,
    Output_AnOut    = h1060,

    KP_ApuKpuState  = h10,
    KP_Datetime     = h12
}

###################################################
# INPUT, OUTPUT - State of digital input
###################################################

struct ApKp_DigIn {
    hwid: u32,
    input_number: u8
}

enum DigInState : u8 {
    S1 = h1,
    S2 = h2,
    S3 = h4,
    S4 = h8
}

struct KpAp_DigIn {
    hwid: u32,
    input_number: u8,
    old_state: u8,
    new_state: u8
}

struct ApKp_DigOut {
    hwid: u32,
    output_nr: u8,
    output_state: u8
}

###################################################
# INPUT, OUTPUT - State of digital output
###################################################

enum DigOutState : u8 {
    NotActive = b0,
    Blinking = b101,
    TimeControlled = b1100,
    PermanentlyActive = b1111
}

struct KpAp_DigOut {
    hwid: u32,
    output_nr: u8,
    old_state: u8,
    new_state: u8
}

###################################################
# INPUT, OUTPUT - DOOR
###################################################

enum DoorState : u8 {
    RelayInactive = h0,
    RelayActive = h1,
    TimeControlled = h2,
    IntervalControlled = h4
}

struct ApKp_DoorState {
    hwid: u32,
    door_nr: u8,
    state: u8
}

struct KpAp_DoorState {
    hwid: u32,
    door_nr: u8,
    old_state: u8,
    new_state: u8
}

###################################################
# MODULES - Data from ADN module
###################################################

struct ApKp_ModuleDataFrom {
    hwid: u32,
    data: [u8]
}

struct KpAp_ModuleDataTo {
    hwid: u32,
    data: [u8]
}

###################################################
# MODULES - ADN Module state
###################################################

enum ModuleState : u16 {
    FaultAP = B0,
    FaultVoltage = B1,
    PwrCommFault = B6,
    Tamper = B14,
    Reset = B15
}

enum ModuleCommState : u16 {
    LedOn = B6,
    UpdateLedSvc = B7,
    ThreeTimeNoResponse = B11,
    EraseExtMem = B12,
    ProgExtMem = B13,
    FirmwareUpgrade = B14,
    NoComm = B15
}

struct ApKp_AdnModuleState {
    hwid: u32
}

struct KpAp_AdnModuleState {
    hwid: u32,
    module_state: u16,
    comm_state: u16
}

###################################################
# MODULES - Power source state
###################################################

enum PwrState1 : u8 {
    RSer = B0,
    BatFault = B1,


    BatShorted = B4,
    BatMissing = B5,
    BatTempHigh = B6,
    OverTemperature = B7
}

enum PwrState2 : u8 {
    IInHigh = B0,
    IBatLow = B1,
    VBatLow = B2,
    VBatHigh = B3,
    VSysLow = B4,
    VSysHigh = B5,
    VInLow = B6,
    VInHigh = B7
}

enum PwrState3 : u8 {
    VSupLow = B0,
    VSupHigh = B1,
    ReducerEn = B2,


    OutHc = B5
}

struct ApKp_PwrState {
    hwid: u32,
    state1: u8,
    state2: u8,
    state3: u8
}

###################################################
# MODULES - Power source bind table
###################################################

 # TODO: dont fully understand to d3sb protocol

struct PrwSrcBound {
    hwid_module: u32,
    hwid_pwrsrc: u32
}

view PrwSrcBoundView {
    [PrwSrcBound],
    u32 # hwid
    # TODO: make no data e.g. 'empty'
}

struct ApKp_PrwSrcBound {
    bound_table: PrwSrcBoundView
}

###################################################
# COMMUNICATION PROCESSOR - APU and KPU state
###################################################

struct ApKp_ApKpState {
    hwid: u32
}

enum ApKpState1 : u8 {
    McuFwOutOfRange = B3,
    CannotSaveToSFlash = B4,
    CannotSaveToHeap = B5,
    SavedToSFlash = B6,
    SFlashPrograming = B7
}

enum ApKpState2 : u8 {
    StateQueueErased = B5,
    TooLongMessage = B4,
    WrongCrc = B2
}

enum ApKpState3 : u8 {
    KpuReseted = B7,
    KpuWDActivatedLedFaultOff = B6
}

enum ApKpState4 : u8 {
    Tamper1 = B1,
    Tamper2 = B0
}

struct KpAp_ApKpState {
    hwid: u32,
    state1: u8,
    state2: u8,
    state3: u8,
    state4: u8
}

###################################################
# COMMUNICATION PROCESSOR - Date and time
###################################################

struct ApKp_Datetime {
    year: u16,
    month: u8,
    day: u8,
    wday: u8,
    hour: u8,
    minute: u8,
    second: u8
}

struct KpAp_Datetime {
    year: u16,
    month: u8,
    day: u8,
    wday: u8,
    hour: u8,
    minute: u8,
    second: u8
}
